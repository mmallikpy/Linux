[Note: Load balance with 2 server with proxy]

#cd /etc/nginx/conf.d

# vi load-balancer.conf
upstream backend {
      server 172.16.200.2;
      server 172.16.200.3;
}

server {
      listen 80;
      server_name web5.rawscripter.com;
      location / {
          proxy_pass http://backend;
      }
}


[Note: Load balance with 2 server with proxy using custom port.]

#cd /etc/nginx/conf.d

# vi load-balancer.conf
upstream backend {
      server 172.16.200.2:8088;
      server 172.16.200.3:8088;
      server 172.16.200.3:8081;
}

server {
      listen 80;
      server_name web5.rawscripter.com;
      location / {
          proxy_pass http://backend;
      }
}



[Note: Some load balanceing methods] [1. least_conn; 2. ip_hash; 3. weight; 4. ]

################## least_conn #######################
upstream backend {
      least_conn;
      server 172.16.200.2:8088;
      server 172.16.200.3:8088;
      server 172.16.200.3:8081;
}


################## ip_hash #########################
upstream backend {
      ip_hash;
      server 172.16.200.2:8088;
      server 172.16.200.3:8088;
      server 172.16.200.3:8081;
}


################## weight #########################
upstream backend {
      least_conn;
      server 172.16.200.2:8088 weight=4;
      server 172.16.200.3:8088 weight=2;
      server 172.16.200.3:8081;
}



[Note: Load balancing with HTTPS enabled ]

upstream backend {
      server 172.16.200.2;
      server 172.16.200.3;
}

server {
   listen 443 ssl;
   server_name domain_name;						[ domain_name = Your Domain Name ]
   ssl_certificate /etc/letsencrypt/live/domain_name/cert.pem;		[ domain_name = Your Domain Name ]
   ssl_certificate_key /etc/letsencrypt/live/domain_name/privkey.pem; 	[ domain_name = Your Domain Name ]
   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

   location / {
      proxy_pass http://backend;
   }
}




[Note: It's for http to https redirect]

server {
   listen 80;
   server_name domain_name;				[ domain_name = Your Domain Name ]
   return 301 https://$server_name$request_uri;

   #location / {
   #   proxy_pass http://backend;
   #}
}



[Note: It's for Helth Check]

upstream backend {
      server 172.16.200.2;
      server 172.16.200.3 max_fails=3 fail_timeout=30s;
}
